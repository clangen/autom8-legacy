#!/bin/bash

VERSION=0.7.2

echo "[*] deleting current staging area, if exists"
rm -rf build/stage/

echo "[*] replacing version in autom8.cpp with $VERSION"
pushd libautom8/src/
sed -i '' -e "s/^#define VERSION \".*\"/#define VERSION \"$VERSION\"/g" autom8.cpp
popd

echo "[*] building libautom8"
make

echo "[*] copying files+libautom8 to staging area"

# prepare stage directory structure
mkdir -p build/stage/bin
mkdir -p build/stage/lib/autom8
mkdir -p build/stage/share

# get the important files in place
cp -rfp autom8_node/client build/stage/lib/autom8
cp -rfp autom8_node/server build/stage/lib/autom8
cp -rfp autom8_node/shared build/stage/lib/autom8
cp bin/init.rc build/stage/bin/autom8-init.rc
cp bin/autom8 build/stage/bin/autom8
mv build/stage/lib/autom8/shared/conf/ build/stage/share/autom8
cp libautom8.so build/stage/lib/ 2> /dev/null
cp libautom8.dylib build/stage/lib/ 2> /dev/null

# we'll build these fresh
rm build/stage/lib/autom8/client/minifier.cache
rm build/stage/lib/autom8/server/minifier.cache

echo "[*] compiling server"
pushd ./build/stage/lib/autom8/server
node cache.js
popd

echo "[*] compiling client"
pushd ./build/stage/lib/autom8/client
node cache.js
popd

echo "[*] removing files that don't need to be distributed"
rm -rf build/stage/lib/autom8/client/frontend/js
rm -rf build/stage/lib/autom8/client/frontend/css
rm -rf build/stage/lib/autom8/client/frontend/templates/*.scripts
rm -rf build/stage/lib/autom8/client/frontend/templates/*.styles
rm -rf build/stage/lib/autom8/server/frontend/js
rm -rf build/stage/lib/autom8/server/frontend/css
rm -rf build/stage/lib/autom8/server/frontend/templates/*.scripts
rm -rf build/stage/lib/autom8/server/frontend/templates/*.styles
rm -rf build/stage/lib/autom8/shared/css
rm build/stage/lib/autom8/shared/templates/*.scripts
rm build/stage/lib/autom8/shared/templates/*.styles
rm -rf build/stage/lib/autom8/shared/js/3rdparty
rm -rf build/stage/lib/autom8/shared/js/frontend
rm ./build/stage/lib/autom8/server/cache.js
rm ./build/stage/lib/autom8/server/backend/raw.js
rm ./build/stage/lib/autom8/client/cache.js

echo "[*] compressing server-side js..."
for js in $(find ./build/stage -name *.js)
do
    echo "      $js"
    ccjs $js > $js.min
    mv $js.min $js
done

pushd build/stage
PREFIX=$(echo $PWD | sed 's_/_\\/_g') # cwd, with escaped slashes
echo "[*] replacing {{PREFIX}} with $PWD"
find . -type f -print0 | xargs -0 sed -i '' -e "s/{{PREFIX}}/$PREFIX/g"
popd

echo "[*] setting client versions to $VERSION"
pushd build/stage
find . -type f -print0 | xargs -0 sed -i '' -e "s/{{version}}/$VERSION/g"
popd

echo "[*] copying installation script, readme, and license"
cp bin/install build/
cp LICENSE build/
cp LICENSE.3rdparty build/
cp LICENSE build/stage/share/autom8
cp LICENSE.3rdparty build/stage/share/autom8

echo "[*] done"
